Create a class for stability conditions.

Inputs for stability condition:
	Assignments for each spanning tree.
	Graph

Objects:

	Poset of (connected spanning) graphs (CSPoset).
		Take graph poset as class (with inclusion), hopefully we can delete subgraphs and inclusions in standard class
		and keep inclusions for those that remain.


	Set of integer data for each spanning subgraph (Sig_data) in CSPoset
	Description: Sig_data can a list, of tuples of subgraph and set multidegrees sig (subgraph,sig).
	Procedure to obtain Sig_data: Chip-adding from lower subgraph sig, recursively from assignments on trees.

	Inductive step:
	
		Chip add to construct sig_fixed_subgraph for fixed_subgraph:

		- For fixed_subgraph, consider subgraphs that include into fixed_subgraph in CSPoset with number of edges of fixed_subgraph -1.

			- Consider edge in complement of fixed_subgraph and subgraph. Construct chip_add_tuples (two of them) for each vertex in edge. 

			- Construct patch of sig_fixed_subgraph: by taking (subgraph,sig) and then take sig + chip_add_tuples 
															store this as set patch_subgraph.

		- Get sig_fixed_subgraph by taking the union of all patch_subgraph and then take the set to remove any repeats.

	Method to get Sig_data:

	- 1) Insert (tree,assignment) data to Sig_data.
	- 2) Get lists of subgraphs according to number of edges: subgraph_list_edgenumber. 
	- 3) Iterate through subgraph_list_edgenumber and apply inductive step to subgraph in subgraph_list_edgenumber to get (subgraph,sig).
	  Add each (subgraph,sig) to Sig.
	- Repeat steps 2) and 3) for subgraph_list_edgenumber_plus_k for k until finished.
	

Methods:

Ordering of subgraphs to each subgraph level (number of edges).

Check sizes of sig of (subgraph,sig).







